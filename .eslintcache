[{"D:\\kundan\\login-reg-crud-in-react\\src\\index.js":"1","D:\\kundan\\login-reg-crud-in-react\\src\\reportWebVitals.js":"2","D:\\kundan\\login-reg-crud-in-react\\src\\App.js":"3","D:\\kundan\\login-reg-crud-in-react\\src\\auth\\login.js":"4","D:\\kundan\\login-reg-crud-in-react\\src\\auth\\register.js":"5","D:\\kundan\\login-reg-crud-in-react\\src\\components\\reg.js":"6","D:\\kundan\\login-reg-crud-in-react\\src\\components\\table.js":"7","D:\\kundan\\login-reg-crud-in-react\\src\\components\\update.js":"8","D:\\kundan\\login-reg-crud-in-react\\src\\crud\\read.js":"9","D:\\kundan\\login-reg-crud-in-react\\src\\crud\\create.js":"10","D:\\kundan\\login-reg-crud-in-react\\src\\crud\\update.js":"11","D:\\kundan\\login-reg-crud-in-react\\src\\crud\\navbar.js":"12"},{"size":548,"mtime":1612183285759,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":904,"mtime":1612357304942,"results":"16","hashOfConfig":"14"},{"size":3404,"mtime":1612363988609,"results":"17","hashOfConfig":"14"},{"size":2698,"mtime":1612332764568,"results":"18","hashOfConfig":"14"},{"size":1273,"mtime":1612185897409,"results":"19","hashOfConfig":"14"},{"size":3562,"mtime":1612340233025,"results":"20","hashOfConfig":"14"},{"size":2713,"mtime":1612350116458,"results":"21","hashOfConfig":"14"},{"size":3620,"mtime":1612355971715,"results":"22","hashOfConfig":"14"},{"size":2708,"mtime":1612353480254,"results":"23","hashOfConfig":"14"},{"size":2727,"mtime":1612353636152,"results":"24","hashOfConfig":"14"},{"size":1698,"mtime":1612357222861,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1yi5egd",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\kundan\\login-reg-crud-in-react\\src\\index.js",[],["54","55"],"D:\\kundan\\login-reg-crud-in-react\\src\\reportWebVitals.js",[],"D:\\kundan\\login-reg-crud-in-react\\src\\App.js",[],"D:\\kundan\\login-reg-crud-in-react\\src\\auth\\login.js",["56"],"import React, { useState } from 'react';\r\nimport {Form,Button} from 'react-bootstrap';\r\nimport axios from \"axios\";\r\nimport { Link } from 'react-router-dom';\r\nimport { useFormik } from \"formik\";\r\n\r\nconst validate = values => {\r\n    const errors = {};\r\n  \r\n    if (!values.email) {\r\n        errors.email = 'Required';\r\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid email address';\r\n      }\r\n  \r\n    if (!values.password) {\r\n      errors.password = 'Required';\r\n    } else if (values.password.length < 6) {\r\n      errors.password = 'Must be 20 characters or less';\r\n    }\r\n  \r\n    return errors;\r\n  };\r\n\r\nconst Login = () => {\r\n\r\n    // const [values, setValues] = useState({\r\n    //     email:'',\r\n    //     password: ''\r\n    // })\r\n\r\n    // const changeHandler = (event) => {\r\n    //     setValues((prevProps) => ({\r\n    //       ...prevProps,\r\n    //       [event.target.name]: event.target.value\r\n    //     }));\r\n    //   };\r\n\r\n    // const handleChange = (prop) => (event) => {\r\n    //     setValues({ ...values, [prop]: event.target.value });\r\n    //   };\r\n\r\n      const formik = useFormik({\r\n        initialValues: {\r\n          email: '',\r\n          password: ''\r\n        },\r\n        validate\r\n      });  \r\n\r\n    const onLogin=()=> {\r\n       // event.preventDefault();\r\n        // console.log(values);\r\n        // alert(`${values.email}`)\r\n        axios.post('http://localhost:3000/user/login',\r\n         {email:formik.values.email, password:formik.values.password})\r\n         .then((res)=> {\r\n            console.log(res)\r\n            alert(\"Login successfully\")\r\n        }).catch((err)=> {\r\n            console.log(err)\r\n        }) \r\n    }\r\n\r\n    return (\r\n        <div style={{padding:\"10%\"}}>\r\n            <h1> Login Form </h1>\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" name=\"email\"\r\n                     placeholder=\"Enter email\"\r\n                     onChange={formik.handleChange}\r\n                     onBlur={formik.handleBlur}\r\n                     value={formik.values.email}\r\n                      />\r\n                </Form.Group>\r\n                <p style={{color:\"red\"}}>\r\n                {formik.touched.email && formik.errors.email ? (\r\n                <div>{formik.errors.email}</div>\r\n                 ) : null}\r\n                </p>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" name=\"password\"\r\n                     value={formik.values.password}\r\n                     placeholder=\"Password\"\r\n                     onChange={formik.handleChange}\r\n                     onBlur={formik.handleBlur}\r\n                     autoComplete=\"on\"\r\n                      />\r\n                </Form.Group>\r\n                <p style={{color:\"red\"}}>\r\n                {formik.touched.password && formik.errors.password ? (\r\n                <div>{formik.errors.password}</div>\r\n                 ) : null}\r\n                </p>\r\n                </Form>\r\n\r\n            <Button type=\"button\" onClick={onLogin} className=\"btn btn-primary\">Login</Button> <br /> <br />\r\n            <Button type=\"button\" variant=\"light\"> <Link to=\"/\">Go to Register </Link> </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","D:\\kundan\\login-reg-crud-in-react\\src\\auth\\register.js",[],"D:\\kundan\\login-reg-crud-in-react\\src\\components\\reg.js",[],"D:\\kundan\\login-reg-crud-in-react\\src\\components\\table.js",[],"D:\\kundan\\login-reg-crud-in-react\\src\\components\\update.js",["57"],"import React,{useState, useEffect} from 'react';\r\nimport {Form,Button} from 'react-bootstrap';\r\nimport axios from \"axios\";\r\n//import {Link} from \"react-router-dom\";\r\n  \r\n\r\nconst Update = (props) => {\r\n\r\n    const [values, setValues] = useState({\r\n        name:'',\r\n        mobile:'',\r\n        email:'',\r\n        // _id:null\r\n    })\r\n\r\n    const changeHandler = (event) => {\r\n        setValues((prevProps) => ({\r\n          ...prevProps,\r\n          [event.target.name]: event.target.value\r\n        }));\r\n      };\r\n     \r\n    useEffect(()=>{\r\n        onGet()\r\n        // console.warn(props) \r\n        // console.warn(props.match.params.id) \r\n    },[])\r\n\r\n    const onGet=()=>{\r\n        axios.get('http://localhost:3000/user/'+ props.match.params.id).then((res)=> {\r\n            console.log(res)\r\n            setValues(res.data)\r\n        }).catch((err)=> {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const onUpdate=()=> {\r\n        axios.patch('http://localhost:3000/user/'+ props.match.params.id,\r\n        {name:values.name, mobile:values.mobile, email:values.email})\r\n        .then((res)=> {\r\n            console.log(res)\r\n            alert(\"Update successfully\")\r\n        }).catch((err)=> {\r\n            console.log(err)\r\n        })\r\n     }  \r\n      \r\n    //  console.log(values._id)\r\n    //  console.log(props.match.params.id)\r\n    return (\r\n        <div style={{padding:\"10%\"}}>\r\n           <h1> Update Table </h1>\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter name\"\r\n                    name=\"name\"\r\n                    value={values.name}\r\n                    onChange={changeHandler}\r\n                     />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Mobile</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter mobile\"\r\n                     name=\"mobile\"\r\n                     value={values.mobile}\r\n                    onChange={changeHandler}\r\n                     />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter email\"\r\n                    name=\"email\"\r\n                    value={values.email}\r\n                    onChange={changeHandler}\r\n                     />\r\n                </Form.Group>\r\n               \r\n               \r\n            </Form>\r\n\r\n            <Button type=\"button\" className=\"btn btn-primary\" onClick={onUpdate} > \r\n            Update Table </Button> <br /> <br />\r\n           \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Update;\r\n","D:\\kundan\\login-reg-crud-in-react\\src\\crud\\read.js",[],"D:\\kundan\\login-reg-crud-in-react\\src\\crud\\create.js",[],"D:\\kundan\\login-reg-crud-in-react\\src\\crud\\update.js",["58"],"import React,{useState, useEffect} from 'react';\r\nimport {Form,Button} from 'react-bootstrap';\r\nimport axios from \"axios\";\r\n//import {Link} from \"react-router-dom\";\r\n  \r\n\r\nconst Update = (props) => {\r\n\r\n    const [values, setValues] = useState({\r\n        name:'',\r\n        mobile:'',\r\n        email:'',\r\n        // _id:null\r\n    })\r\n\r\n    const changeHandler = (event) => {\r\n        setValues((prevProps) => ({\r\n          ...prevProps,\r\n          [event.target.name]: event.target.value\r\n        }));\r\n      };\r\n     \r\n    useEffect(()=>{\r\n        onGet()\r\n        // console.warn(props) \r\n        // console.warn(props.match.params.id) \r\n    },[])\r\n\r\n    const onGet=()=>{\r\n        axios.get('http://localhost:3000/user/'+ props.match.params.id).then((res)=> {\r\n            console.log(res)\r\n            setValues(res.data)\r\n        }).catch((err)=> {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const onUpdate=()=> {\r\n        axios.patch('http://localhost:3000/user/'+ props.match.params.id,\r\n        {name:values.name, mobile:values.mobile, email:values.email})\r\n        .then((res)=> {\r\n            console.log(res)\r\n            alert(\"Update successfully\")\r\n        }).catch((err)=> {\r\n            console.log(err)\r\n        })\r\n     }  \r\n      \r\n    //  console.log(values._id)\r\n    //  console.log(props.match.params.id)\r\n    return (\r\n        <div style={{padding:\"10%\"}}>\r\n           <h1> Update Table Without Token </h1>\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter name\"\r\n                    name=\"name\"\r\n                    value={values.name}\r\n                    onChange={changeHandler}\r\n                     />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Mobile</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter mobile\"\r\n                     name=\"mobile\"\r\n                     value={values.mobile}\r\n                    onChange={changeHandler}\r\n                     />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter email\"\r\n                    name=\"email\"\r\n                    value={values.email}\r\n                    onChange={changeHandler}\r\n                     />\r\n                </Form.Group>\r\n               \r\n               \r\n            </Form>\r\n\r\n            <Button type=\"button\" className=\"btn btn-primary\" onClick={onUpdate} > \r\n            Update Table </Button> <br /> <br />\r\n           \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Update;\r\n","D:\\kundan\\login-reg-crud-in-react\\src\\crud\\navbar.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":25},{"ruleId":"67","severity":1,"message":"68","line":27,"column":7,"nodeType":"69","endLine":27,"endColumn":9,"suggestions":"70"},{"ruleId":"67","severity":1,"message":"68","line":27,"column":7,"nodeType":"69","endLine":27,"endColumn":9,"suggestions":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onGet'. Either include it or remove the dependency array.","ArrayExpression",["74"],["75"],"no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},{"desc":"76","fix":"78"},"Update the dependencies array to be: [onGet]",{"range":"79","text":"80"},{"range":"81","text":"80"},[645,647],"[onGet]",[645,647]]